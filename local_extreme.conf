[[local|localrc]]

## source repositories and branches
GIT_BASE="http://github.com"
#GIT_BASE="http://git.openstack.org"
LIBS_FROM_GIT="python-neutronclient"

# 'FORCE=yes' suppresses error exit when the underlying ubuntu is too new
FORCE=yes
RECLONE=no

## logs
VERBOSE=true
LOG_COLOR=true
LOGFILE="stack.sh.log"

# look for logs in stack.sh.log and /opt/stack/logs/
SCREEN_LOGDIR="$DEST/logs"

## network settings
# Use the interface with the default route as our primary interface
_public_interface="$( ip route | awk '/^default / { print $5 }' )"
#HOST_IP="$( ip address show "$_public_interface" | awk '/ inet / { print $2 }' | cut -d/ -f1 )"
HOST_IP=10.6.50.200

## multi-host settings
MULTI_HOST=false

## proxy settings
no_proxy="localhost,127.0.0.1,10.6.0.0/16,${HOST_IP:?}"

## openstack components
disable_service n-net
enable_service neutron
enable_service q-agt
enable_service q-dhcp
# FIXME Change local.conf so l3-agent can work again.
disable_service q-l3
enable_service q-meta
enable_service q-metering
enable_service q-svc

enable_service tempest
enable_plugin extreme /opt/stack/extreme

disable_service c-api
disable_service c-sch
disable_service c-vol

disable_service h-api
disable_service h-api-cfn
disable_service h-api-cw
disable_service h-eng
disable_service heat


## passwords
_password="devstack"
ADMIN_PASSWORD="$_password"
DATABASE_PASSWORD="$_password"
RABBIT_PASSWORD="$_password"
SERVICE_PASSWORD="$_password"
SERVICE_TOKEN="$_password"

# Network Configuration
FLOATING_RANGE=10.6.0.0/16 #Your LAN network segment
Q_FLOATING_ALLOCATION_POOL=start=10.6.20.100,end=10.6.20.200
FIXED_RANGE=192.168.1.0/24 #Private network for guest VMs
FIXED_NETWORK_SIZE=256
NETWORK_GATEWAY=192.168.1.1 #Gateway used for guest VMs
PUBLIC_NETWORK_GATEWAY=10.6.0.1

## other settings
# Extreme deployment type
# This variable will be ignored when the extreme plugin is not loaded
# There are two possible options now
# single-mocked - This option means that you have an all-in-one
# devstack with mocked extreme.
# multi-emulated - This option means that you have a multi host devstack
# (an all-in-one host + a compute node) with an extreme emulator.
EXTREME_DEPLOYMENT_TYPE=single-mocked
#EXTREME_DEPLOYMENT_TYPE=multi-emulated

# Management access to the extreme VM (if there is one).
EXTREME_MGMT_IP="10.6.50.201"
EXTREME_MGMT_USER="devstack"
EXTREME_MGMT_PASSWORD="$_password"

# Topology DB
# You need to specify the hostnames of both of your hosts if you have set
# EXTREME_DEPLOYMENT_TYPE to multi-emulated. Otherwise these variables will
# be ignored.
HOST_ALL_IN_ONE="controller"
HOST_COMPUTE="compute"

# Extreme L3
EXTREME_ENABLE_L3=True

# Set keystone token format to UUID, which makes development easier.
KEYSTONE_TOKEN_FORMAT=UUID

# API rate limiting can make life hard with tempest, better turn it off.
API_RATE_LIMIT=False

# Extreme routers (or router-interfaces) cannot be created without
# initializing the Extreme device's vr_total attribute.
# Networks created before initialization of the topology DB will not
# work properly with the Extreme emulator.
# The first time we can do the Extreme specific initialization is local.sh.
# For Extreme all other net/subnet/router/etc init should happen after it.
NEUTRON_CREATE_INITIAL_NETWORKS=True

# Enable Ericsson provided ML2 drivers.
Q_PLUGIN=ml2
ENABLE_TENANT_TUNNELS=False
ENABLE_TENANT_VLANS=True
OVS_BRIDGE_MAPPINGS=default:br-vlan
ML2_VLAN_RANGES=default:200:4000

# For trunk port scenario tests. See also:
#     * devstack/ericsson/local.sh.sample
#     * tempestplugin/tests/scenario/test_trunkport_basic_ops.py
#
# OVS_BRIDGE_MAPPINGS=default:br-vlan,tempest:br-tempest
# ML2_VLAN_RANGES=default:200:4000,tempest:200:300

## neutron.conf
[[post-config|$NEUTRON_CONF]]
[DEFAULT]
# Load the topology extension.
api_extensions_path = "$NEUTRON_DIR/neutron/ericsson/extensions"
service_plugins = neutron.ericsson.services.l3_router.ml3.plugin.Ml3Plugin,neutron.ericsson.db.topology_db.TopologyDbPlugin
#service_plugins = ericsson_ml3,ericsson_topology

[ml3]
l3_providers = extreme:default,l3_agent

## ml2_conf.ini
[[post-config|/$Q_PLUGIN_CONF_FILE]]

[agent]
# devstack by default configures this to contain vxlan, which causes noisy
# error messages in neutron-server when the vxlan type driver is not loaded.
tunnel_types =

[extreme]
#driver = neutron.ericsson.drivers.extreme.log.ExtremeLogManager
driver = neutron.ericsson.drivers.extreme.soap.manager.ExtremeSoapManager
start_periodic_checker = False

[ml2]
# XXX Trunk port v1 is incompatible with non-vlan tenant network
# types. Particularly if you enable another tenant network type here
# (earlier in the list than 'vlan') and then you try to bind a trunkport,
# it will fail. When we set tenant_network_types=vlan, we actually hide
# the incompatibility. Erik Moe probably has already worked on making
# the trunkport feature compatible with other (e.g. GRE) tenant network
# types and his work may be present on review.openstack.org already. But
# unfortunately this work is not yet merged into the Ericsson-internal
# code base. See also:
# https://review.openstack.org/#/q/project:openstack/neutron+topic:bp/vlan-aware-vms,n,z
tenant_network_types = vlan
mechanism_drivers = openvswitch,extreme,baremetal
type_drivers = vlan

[securitygroup]
firewall_driver = openvswitch

[ovs]
enable_tunneling=False
integration_bridge=br-int
bridge_mappings=default:br-int
datapath_type = system

# nova.conf
[[post-config|$NOVA_CONF]]

[DEFAULT]
firewall_driver = nova.virt.firewall.NoopFirewallDriver
