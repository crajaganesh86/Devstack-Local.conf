# Sample ``localrc`` for user-configurable variables in ``stack.sh``

# NOTE: Copy this file to the root ``devstack`` directory for it to
# work properly.

# ``localrc`` is a user-maintained setings file that is sourced from ``stackrc``.
# This gives it the ability to override any variables set in ``stackrc``.
# Also, most of the settings in ``stack.sh`` are written to only be set if no
# value has already been set; this lets ``localrc`` effectively override the
# default values.

# This is a collection of some of the settings we have found to be useful
# in our DevStack development environments. Additional settings are described
# in http://devstack.org/localrc.html
# These should be considered as samples and are unsupported DevStack code.

# Minimal Contents
# ----------------

# While ``stack.sh`` is happy to run without ``localrc``, devlife is better when
# there are a few minimal variables set:

# If the ``*_PASSWORD`` variables are not set here you will be prompted to enter
# values for them by ``stack.sh`` and they will be added to ``localrc``.
[[local|localrc]]

HOST_IP=10.6.2.107 #Devstack Host IP
MYSQL_HOST=$HOST_IP
RABBIT_HOST=$HOST_IP
SERVICE_HOST=$HOST_IP

ADMIN_PASSWORD=adminPass
MYSQL_PASSWORD=mysqlPass
RABBIT_PASSWORD=rabbitPass
SERVICE_PASSWORD=servicePass
DATABASE_PASSWORD=databasePass
SERVICE_TOKEN=7a4a023298d2ed4aee97

# Network Configuration
FLOATING_RANGE=10.6.0.0/16 #Your LAN network segment
Q_FLOATING_ALLOCATION_POOL=start=10.6.20.100,end=10.6.20.200
FIXED_RANGE=192.168.1.0/24 #Private network for guest VMs
FIXED_NETWORK_SIZE=256
NETWORK_GATEWAY=192.168.1.1 #Gateway used for guest VMs
PUBLIC_NETWORK_GATEWAY=10.6.0.1

# Openstack Services
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service q-meta
enable_service neutron

#Optional Services
#enable_service q-lbaas
#enable_service q-vpn
#enable_service q-fwaas

# Neutron Configuration for OVS, VxLAN and ML2
Q_PLUGIN=ml2
Q_AGENT=openvswitch
Q_USE_DEBUG_COMMAND=True
Q_L3_ENABLED=True
Q_L3_ROUTER_PER_TENANT=True
FLAT_INTERFACE=eth0
ENABLE_TENANT_TUNNELS=True
TENANT_TUNNEL_RANGE=-1:1000
Q_ML2_TENANT_NETWORK_TYPE=vxlan
Q_USE_PROVIDERNET_FOR_PUBLIC=True
OVS_BRIDGE_MAPPINGS=public:br-ex
OVS_ENABLE_TUNNELING=True
PUBLIC_BRIDGE=br-ex

# Tempest - Optional
disable_service tempest
TEMPEST_HTTP_IMAGE=127.0.0.1

# Nova Configurations
disable_service n-net
VIRT_DRIVER=libvirt

# Cloning the pakages

RECLONE=yes

# Logging
# -------

# By default ``stack.sh`` output only goes to the terminal where it runs.  It can
# be configured to additionally log to a file by setting ``LOGFILE`` to the full
# path of the destination log file.  A timestamp will be appended to the given name.
LOGFILE=$DEST/logs/stack.sh.log

# Old log files are automatically removed after 7 days to keep things neat.  Change
# the number of days by setting ``LOGDAYS``.
LOGDAYS=2

# Nova logs will be colorized if ``SYSLOG`` is not set; turn this off by setting
# ``LOG_COLOR`` false.
#LOG_COLOR=False
SCREEN_LOGDIR=$DEST/logs/screen

# Using milestone-proposed branches
# ---------------------------------

# Uncomment these to grab the milestone-proposed branches from the repos:
#CINDER_BRANCH=milestone-proposed
#GLANCE_BRANCH=milestone-proposed
#HORIZON_BRANCH=milestone-proposed
#KEYSTONE_BRANCH=milestone-proposed
#KEYSTONECLIENT_BRANCH=milestone-proposed
#NOVA_BRANCH=milestone-proposed
#NOVACLIENT_BRANCH=milestone-proposed
#NEUTRON_BRANCH=milestone-proposed
#SWIFT_BRANCH=milestone-proposed


# Swift
# -----

# Swift is now used as the back-end for the S3-like object store. If Nova's
# objectstore (``n-obj`` in ``ENABLED_SERVICES``) is enabled, it will NOT
# run if Swift is enabled. Setting the hash value is required and you will
# be prompted for it if Swift is enabled so just set it to something already:
SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5

# For development purposes the default of 3 replicas is usually not required.
# Set this to 1 to save some resources:
SWIFT_REPLICAS=1

# The data for Swift is stored by default in (``$DEST/data/swift``),
# or (``$DATA_DIR/swift``) if ``DATA_DIR`` has been set, and can be
# moved by setting ``SWIFT_DATA_DIR``. The directory will be created
# if it does not exist.
SWIFT_DATA_DIR=$DEST/data